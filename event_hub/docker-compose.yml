services:
  app:
    build: .
    ports: ["8000:8000"]
    depends_on: [mongo, redis, prometheus, jaeger]
    environment:
      MONGO_URI: "mongodb://mongo:27017"
      REDIS_HOST: "redis"
      JAEGER_HOST: "jaeger"
      JAEGER_PORT: "6831"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  grpc-server:
    build: .
    ports: ["50051:50051"]
    depends_on: [mongo, redis, prometheus, jaeger]
    environment:
      MONGO_URI: "mongodb://mongo:27017"
      REDIS_HOST: "redis"
      JAEGER_HOST: "jaeger"
      JAEGER_PORT: "6831"
    command: python -m app.grpc.server

  metrics-consumer:
    build: .
    depends_on: [mongo, redis, prometheus, jaeger]
    environment:
      MONGO_URI: "mongodb://mongo:27017"
      REDIS_HOST: "redis"
      JAEGER_HOST: "jaeger"
      JAEGER_PORT: "6831"
    command: python -m consumer.metrics_consumer

  mongo:
    image: mongo:6
    ports: ["27017:27017"]
    volumes: [mongo_data:/data/db]

  redis:
    image: redis:7
    ports: ["6379:6379"]
    volumes: [redis_data:/data]

  prometheus:
    image: prom/prometheus:latest
    ports: ["9090:9090"]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # UI
      - "6831:6831/udp"  # Agent
      - "14268:14268"  # Collector HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true

volumes:
  mongo_data:
  redis_data:
  prometheus_data: