.PHONY: help install dev test clean proto docker-up docker-down docker-logs

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON = python3
PIP = pip3
DOCKER_COMPOSE = docker-compose

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "Event Hub - –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "=================================="
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	$(PIP) install -r requirements.txt
	$(PIP) install pytest pytest-asyncio httpx flake8 black

proto: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å protobuf —Ñ–∞–π–ª—ã
	$(PYTHON) generate_protos.py

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	$(PYTHON) run_dev.py

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	pytest tests/ -v

test-coverage: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
	pytest tests/ --cov=app --cov-report=html -v

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º
	flake8 app/ consumer/ client/ tests/
	black --check app/ consumer/ client/ tests/

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	black app/ consumer/ client/ tests/

docker-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker —Å–µ—Ä–≤–∏—Å—ã
	$(DOCKER_COMPOSE) up -d --build

docker-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker —Å–µ—Ä–≤–∏—Å—ã
	$(DOCKER_COMPOSE) down

docker-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Docker
	$(DOCKER_COMPOSE) logs -f

docker-clean: ## –û—á–∏—Å—Ç–∏—Ç—å Docker –¥–∞–Ω–Ω—ã–µ
	$(DOCKER_COMPOSE) down -v
	docker system prune -f

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -type d -name "*.egg-info" -exec rm -rf {} +
	rm -rf .pytest_cache/
	rm -rf htmlcov/

generate-events: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è
	cd client && $(PYTHON) event_generator.py

grpc-client: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å gRPC –∫–ª–∏–µ–Ω—Ç
	cd client && $(PYTHON) grpc_client.py

check-status: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
	@echo "FastAPI: $(shell curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/docs || echo "–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")"
	@echo "GraphQL: $(shell curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/graphql || echo "–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")"
	@echo "MongoDB: $(shell docker ps | grep mongo || echo "–Ω–µ –∑–∞–ø—É—â–µ–Ω")"
	@echo "Redis: $(shell docker ps | grep redis || echo "–Ω–µ –∑–∞–ø—É—â–µ–Ω")"

setup: install proto ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"

all: setup docker-up ## –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "üéâ Event Hub –∑–∞–ø—É—â–µ–Ω!"
	@echo "üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
	@echo "   ‚Ä¢ FastAPI: http://localhost:8000"
	@echo "   ‚Ä¢ GraphQL: http://localhost:8000/graphql"
	@echo "   ‚Ä¢ gRPC: localhost:50051" 